7.10 Exercises 55.
7.33 [5J <§7.3> The cycle times for the processors in Exercise 7.32 are 420 ps for
the first and second processors and 310 ps for the third processor. Determine
which processor is the fa stest and which is the slowest.
7.34 [15J <§7.3> Assume that the cache for the system described in Exercise 7.32 is
two-way set associative and has eight-word blocks and a total size of 16 KB. Show the
cache organization and access using the same format as Figure 7.1 7 on page 503.
7.35 (10 ) <§§7.2, 7.4> The following C program is run (with no optimizations)
on a processor with a cache that has eight-word (32-byte) blocks and holds 256
bytes of data:
int i , j , c , st r ide , array[512] ;
f o r ( i =O; i<10000 ; i ++ )
for (j =O; j<512 ; j =j +s tride )
= array[j] +17 ;
C
If we consider only the cache activity generated by references to the array and we
assume that integers are words, what is the expected miss rate when the cache is
direct mapped and stride = 256? How about if stride = 255? Would either of these
change if the cache were two-way set associative?
7.36 (10 ) <§§7.3, B.5> " Fo r More Practice: Cache Configurations
7.37 [5 J <§§7.2-7.4> • For More Practice: Memory Hierarchy Interactions
7.38 [4 hoursJ <§§7.2-7.4> We want to use a cache simulato r to simulate several
different TLB and virtual memory organizations. Use the first I million references
of gcc for this evaluation. We want to know the TLB miss rate fo r each of the fol 
lowing TLBs and page sizes:
I. 64-entry TLB with full associativity and 4 KB pages
2. 32-entry TLB with full associativity and 8 KB pages
3. 64-entry TLB with eight-way associativity and 4 KB pages
4. I28-entry TLB with four-way associativity and 4 KB pages
7.39 [15J <§7.4> Consider a virtual memory system with the following properties:
• 40-bit virtual byte address
• 16 KB pages
• 36-bit physical byte address
What is the total size of the page table for each process on this processor, assuming
that the valid, protection, dirty, and use bits take a total of 4 bits and that all the vir 
tual pages are in use? (Assume that disk addresses are not stored in the page table.)