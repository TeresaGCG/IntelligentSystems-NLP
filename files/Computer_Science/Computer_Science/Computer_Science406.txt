390 Chapter 6 Enhancing Performance with Plpellnlng
I.
Exocution
,=
~ ,~~ M~
b
~"--
~~
•
Shift ......
~,
._.
~
"•
,
,•" ~ • --~,", - ,
-- - , ~ ,- ._.
~ - - -- ~
I -·'fIood - ,
ALU .o.LUI- - _ '0'
....
,.. w., "• - ~. •
- -
," ,•"
•
W~
..
W~
"
~.
Sign ~
-~.
'-./
'--- '---
FIGURE 6.13 EX: the third pipe stage of a load Instruction, highlighting the portions of the datapath In Figure 6.11 used In
this pipe stage. The register is added to the sign-extended immediate,and the sum is placed in the EXlMEM pipeline register.
2. Instruction decode and register file read: The bottom portion of Figure 6.1 2
shows the instruction portion of the IF/ ID pipeline register supplying the
16-bit immediate field, which is sign-extended to 32 bits, and the register
numbers to read the two registers. All three values are stored in the ID/E.X
pipeline register, along with the incremented PC address. We again transfer
everything that might be needed by any instruction during a later clock
cycle.
3. Execute or address calculation: Figure 6. 13 shows that the load instruction
reads the contents of register 1 and the sign-extended immediate from the
ID/EX pipeline register and adds them using the ALU. That sum is placed in
the EXlMEM pipeline register.
4. Memoryaccess: The top portion of Figure 6.14 shows the load instruction
reading the data memory using the address from the EXlMEM pipeline
register and loading the data into the MEM/WB pipeline register.