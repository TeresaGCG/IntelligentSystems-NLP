7.4 Virtual Memory 517
Page table register
Virtual address
•
31 3 0 2. 28 2 7 .......................... 15 14 1 3 12 11 1 0 8 ......... 3 2 1 0
Virtual page number Page offset
12
2lJ
Valid Physical page number
Page table
18
If 0 then page is not
present in memory
•
2. 28 27 ................................. .. 1 5 14 1 3 12 11 10 8 ·· ...... 3 2 1 0
Physical page number Page offset
Physical address
FtGURE 7.21 The page table Is Indexed with the virtual page number to obtain the corresponding portion of the physical
12
address. The starting address ofthe page table is given by the p.1ge table pointer. In this figure, the page size is 2 bytes, or 4KB. The virtual address
space is i 32 bytes, or 4 GB, and the physical address space is 230 bytes, which allows main memory of up to 1 GB. The nwnber of entries in the p.1ge
20
table is 2 , or I million entries.The valid bit for each emry indicates whether the mapping is legal. If it is off, then the page is not present in memory.
Although the page table entry shown here need only be 19 bits wide, it would typicaUy be rounded up to 32 bits for ease of indexing. The extra bits
would be used to store additional information that needs to be kept on a per-page basis, such as protection.
Because we do not know ahead of time when a page in memory will be chosen
to be replaced, the operating system usually creates the space on disk for all the
pages of a process when it creates the process. This disk space is called the swap
swap space The space on the
space. At that time, it also creates a data structure to record where each virtual
disk reserved for the full virntal
page is stored on disk. This data structure may be part of the page table or may be memory space ofa process.
an auxiliary data strucnlfe indexed in the same way as the page table. Figure 7.22