232 Chapter 3 Arithmetic: for Computers
3.30 [15) <§§3.2, 3.6> The Big Picture on page 216 mentions that bits have no
inherent meaning. Given the bit pattern:
101011010001 0000 0000 0000 0000 0010
what does it represent, assuming that it is
a. a two's complement integer?
b. an unsigned integer?
c. a single precision floating-point number?
d. a MIPS instruction?
II
You may find Figures 3.20 (page 208) and A.tO.l (page A-50) useful.
3.31 <§§3.2, 3.6> This exercise is similar to Exercise 3.30, but this time use the bit
pattern
0010 0100 1001 0010 0100 1001 0010 0100
II
3.32 [1011 10] <§3.6> For More Practice: Floating Point Number Represen 
tations
II
3.33 (10 ) <§3.6> For More Practice: Floating Point Number Representations
II
3.34 (10 ) <§3.6> For More Practice: Writing MIPS Code to Perform FP
Arithmetic
3 4
3.35 [51 <§3.6> Add 2.85 X 10 to 9.84 X 10 , assuming that you have only
ten ten
three significant digits, first with guard and round digits and then without them.
3.36 [5J <§3.6> This exercise is similar to Exercise 3.35, but this time use the
4 3
numbers 3.63 X 10 and 6.87 X 10
•
ten ten
3.37 [5 J <§3.6> Show the IEEE 754 binary representation for the floating-point
number 20 in single and double precision.
ten
3.38 [5J <§3.6> This exercise is similar to Exercise 3.37, but this time replace the
number 20 with 20.5 .
ten ten
3.39 (10 ) <§3.6> This exercise is similar to Exercise 3.37, but this time replace the
number 20 with O. l .
ten ten
3.40 (10 ) <§3.6> This exercise is similar to Exercise 3.37, but this time replace the
number 20 with the decimal fraction -5/6.
ten
3.41 (10 ) <§3.6> Suppose we introduce a new instruction that adds three
floating-point numbers. Assuming we add them together with a triple adder, with
guard, round, and sticky bits, are we guaranteed results within I ulp of the results
using two distinct add instmctions?