542 Chapter 7 Large and Fast: Exploiting Memory Hierarchy
so expensive and relatively infrequent, approximating this information primarily
in software is acceptable.
Question 4: What Happens on a Write?
A key characteristic of any memory hierarchy is how it deals with writes. We have
already seen the two basic options:
• Write-through: The information is written to both the block in the cache and
to the block in the lower level of the memory hierarchy (main memory for a
cache). The caches in Section 7.2 used this scheme.
• Write-back (also called copy-back): The information is written only to the
block in the cache. The modified block is written to the lower level of the
hierarchy only when it is replaced. Virtual memory systems always use
write-back, for the reasons discussed in Section 7.4.
Both write-back and write-through have their advantages. The key advantages
of write-back are the following:
• Individual words can be written by the processor at the rate that the cache,
rather than the memory, can accept them.
• Multiple writes within a block require only one write to the lower level in
the hierarchy.
• When blocks are written back, the system can make effective use of a high 
bandwidth transfer, since the entire block is written.
Write-through has these advantages:
• Misses are simpler and cheaper because they never require a block to be
written back to the lower level.
• Write-through is easier to implement than write-back, although to be prac 
tical in a high-speed system, a write-through cache will need to use a write
buffer.
In virtual memory systems, only a write-back policy is practical because of the
long latency of a write to the lower level of the hierarchy (disk). As processors con 
tinue to increase in performance at a faster rate than DRAM-based main memory,
the rate at which writes are generated by a processor will exceed the rate at which
the memory system can process them, even allowing for physically and logically
wider memories. Consequently, more and m ore caches are using a write-back
strategy.