8.5 Interfacing I/ O Devices to the Processor, Memory, and Operating System 589
• The OS handles the interrupts generated by I/O devices, just as it handles
the exceptions generated by a progra
tn•
• The OS tries to provide equitable access to the shared I/O resources, as well
as schedule accesses in order to enhance system throughput.
To perform these functions on behalf of user programs, the operating system
must be able to communicate with the I/O devices and to prevent the user pro 
gram from communicating with the I/O devices directly. Three types of commu 
nication are required:
I. The OS must be able to give commands to the I/O devices. These com  
mands include not only operations like read and write, but also other oper 
ations to be done on the device, such as a disk seek.
2. The device must be able to notify the OS when the I/O device has com  
pleted an operation or has encountered an error. For example, when a disk
os.
completes a seek, it will notify the
3. Data must be transferred between memory and an I/O device. For example,
the block being read on a disk read must be moved from disk to memory.
In the next few sections, we will see how these communications are performed.
Giving Commands to I/O Devices
To give a command to an I/O device, the processor must be able to address the
device and to supply one or more command words. Two methods are used to
address the device: memory-mapped I/O and special I/O instructions. In memory-mapped I/O An I/O
scheme in which portions of
memory-mapped 110, portions of the address space are assigned to I/O devices.
address space are assigned to
Reads and writes to those addresses are interpreted as commands to the I/O
I/O devices and reads and writes
device.
to those addresses are inter 
For example, a write operation can be used to send data to an I/O device where
preted as commands to the I/O
the data will be interpreted as a command. When the processor places the address
device.
and data on the memory bus, the memory system ignores the operation because
the address indicates a portion of the memory space used for I/O. The device con 
troller, however, sees the operation, records the data, and transmits it to the device
as a command. User programs are prevented from issuing I/O operations directly
os
because the does not provide access to the address space assigned to the I/O
devices and thus the addresses are protected by the address translation. Memory 
mapped I/O can also be used to transmit data by writing or reading to select
addresses. The device uses the address to determine the type of command, and the
data may be provided by a write or obtained by a read. In any event, the address
encodes both the device identity and the type of transmission between processor
and device.