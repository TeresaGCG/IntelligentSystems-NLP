'·3 Index
processor-memory or I/O, 582 memory, 20 multicycle implementation, 31S--340
shared,322-324 memory system design to support, single-cycle implementation,
synchronous, 582-583 487-491 300-318
transaction, 582 misses, handling, 482--483, 496--502 Clock cycles, breaking execution into
Bypassing, 376-377 multilevel,492,505-510 arithmetic-logical instruction,
Byte addressing, 56 nonblocking, 445, 548 327,329
Byte order, A4J performance, measuring and branches, 327-328
improving, 492-51 I decode instruction and register fetch,
c
performance with increased clock 326--327
rate, 495-496 fetch instruction, 325-326
c
reducing miss penalty using multi- jump, 328
bit fields, IMD2:13- 14 level,505-509 memory read, 329
converting floating points to MIPS set associative, 497, 504 memory reference, 327, 328
3£Sembly code, 209-213 split, 487 Clock cycles per instruction (CPI),
development of, CD2.19:7 tags, 475, 504 248-251
logical operations, 68-71 three Cs model, 543-545 in multicycle CPU, 330-331
overflows, 172 valid bit, 476 Clocking methodology, 290-292, 847
procedures, 81-88 writes, handling, 483--485 edge-triggered, 290-291, B47
sort example, 121-129 Callee, 80, A23 level-sensitive, B74-75
strings, 92-93 Caller, 80, A23 timing methodologies, B72-77
translating hierarchy, 106-111 Cal TSS, CD7.9:8 Clock period, 245, B47
while loop in, 74-75 Capacity misses, 543 Clock rate, 245
Cache coherency Carnegie Mellon University, CD6.13:5 Clocks, B47-49
multiprocessor, CD9.3: 12- 20 Carrier signal, CD8.3:8 Clock skew, B73-74
protocols, CD9.3:13, 16--18 Carrylookahead, B38-47 CLU, CD2.19:7
snooping, CD9.3:13 Carry save adders, 181, lMD3:17-18 Clusters, CD9.1:4, CD9.5:25-26
synchronization using, CD9.J: 18-20 Case statement, 76 CMOS (Complementary Metal Oxide
Cache-coherent nonuniform memory Cathode ray tubes (CRTs), 18 Semiconductor), 31, 264
access (CC-NUMA), CD9.4:22 Cause register, 342 Coarse-grained multithreading,
Caches CauseWrite, 342 CD9.7:31-33
accessing, 47~82 Central processor unit (CPU), 20 Cobol, CD2.19:6, CD8.11:4
associativity, 499--502 execution time, 244-245 Cocke, John, CD2.19:8, CD6.13:2, 4
basics of, 473-491 performance, 245, 246--253 Codd, Ted, CD8.11:4, 5
bits in, 479 time, 244-245 Code generation, CD2.12:9
blocks, locating in, 502-504 Cerf, Vint,CD8.11:7 Code motion, 119
blocks used to reduce misses, Chamberlin, Donald, CD8.11:5 Code size, fallacy ofusing, IMD4:18- 19
496-502 Characters, Java, 93-95 Coherence problem, 595
defined,473 Chavin de Huantar, 236-237 Cold-start misses, 543
direct-mapped, 474-475, 497 Chips, 20, 30 Collision misses, 543
example of simple, 474-476 Clearing words in memory Color, 292
fully associative, 497 arrays and, 130-132 Colossus, CD 1.7:3
lntrinsity FastMATH processor comparing both methods, 133-134 Combinational control units, C4---8
example, 485-487 pointers and, 132-133 Combinational elements, 289
mapping address to multiword Clock cycles, 245, 847 Combinational logic, B5, 8-20, 23-25
block,480 finite state machines, 332 Compact disks (CDs), 25