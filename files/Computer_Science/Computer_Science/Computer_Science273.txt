4.3 Evaluating Performance 257
Computer A Computer B
Program 1 (seconds) 1 10
Program 2 (seconds) 1000 100
Total time (seconds) 1001 110
FtGURE 4.4 Execution times of two programs on two different
computers. T.'lken from Figure I ofSmith [19881.
measurements results in less information, marketers and even users often prefer to
have a single number to compare performance. The key question is, How should a
summary be computed? Figure 4.4, which is abstracted from an article about sum 
marizing performance, illustrates some of the difficulties facing such efforts.
Using our definition of faster, the following statements hold fo r the program
measurements in Figure 4.4:
• A is 10 times faster than B for program 1.
• B is 10 times faster than A for program 2.
Taken individually, each of these statements is true. Collectively, however, they
present a confusing picture-the relative performance of computers A and B is unclear.
Total Execution Time: A Consistent Summary Measure
The simplest approach to summarizing relative performance is to use total execu 
tion time of the two programs. Thus
PerformanceB Execution timeA
1001
9.1
Perfo rmance Execution time 110
B
A
That is, B is 9.1 times as fast as A for program s I and 2 together.
This summary is directly proportional to execution time, our final measure of
performance. If the workload consists of running program s I and 2 an equal
number of times, this statement would predict the relative execution times fo r the
workload on each computer.
The average of the execution times that is directly proportional to total execu 
tion time is the arithmetic mean (AM): arithmetk mean The average
of the execution times that is
" directly proportional to total
~ L Timei
AM execution time.
t
; =0